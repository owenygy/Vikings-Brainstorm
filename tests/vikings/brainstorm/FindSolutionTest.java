package vikings.brainstorm;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.Timeout;

import java.util.Arrays;

import static org.junit.Assert.assertTrue;

public class FindSolutionTest {
    @Rule
    public Timeout globalTimeout = Timeout.millis(5000);

    @Test
    public void testTrivial() {
        test(new Objective("Rv", "N0O1N1N0O1O2N0N2N2Rs", 0), new String[]{"6"});
        test(new Objective("Rv", "N0O1N1N0O1O2N0N1N2Rw", 0), new String[]{"76"});
    }

    @Test
    public void testStarter() {
        for (int i = 0; i < 15; i++) {
            Objective obj = Objective.OBJECTIVES[i];
            test(obj, SOLUTIONS[i]);
        }
    }

    /*
    // uncomment this to further test your solver
    @Test
    public void testJunior() {
        for (int i = 15; i < 30; i++) {
            Objective obj = Objective.OBJECTIVES[i];
            test(obj, SOLUTIONS[i]);
        }
    }
    */

    private void test(Objective objective, String[] expected) {
        String solution = Vikings.findSolution(objective);
        assertTrue("Expected solution in " + Arrays.toString(expected) + " for  " + objective + " but got "
                + solution, Arrays.asList(expected).contains(solution));
    }

    static final String[][] SOLUTIONS = {
            // STARTER
            {"8547776"},
            {"744111222558"},
            {"0336743330001122"},
            {"88855214555888777441033666"},
            {"0336743330001114522"},
            {"1100222112111", "1102022112111", "1102202112111", "1102220112111", "1120022112111", "1120202112111", "1120220112111", "1122002112111", "1122020112111", "1122200112111"},
            {"0001102330110002333", "0001102330110003233", "0001102330110003323", "0001102330110003332", "0001102330110020333", "0001102330110200333", "0001102330112000333", "0001103230110002333", "0001103230110003233", "0001103230110003323", "0001103230110003332", "0001103230110020333", "0001103230110200333", "0001103230112000333", "0001103302110002333", "0001103302110003233", "0001103302110003323", "0001103302110003332", "0001103302110020333", "0001103302110200333", "0001103302112000333", "0001103320110002333", "0001103320110003233", "0001103320110003323", "0001103320110003332", "0001103320110020333", "0001103320110200333", "0001103320112000333", "0001120330110002333", "0001120330110003233", "0001120330110003323", "0001120330110003332", "0001120330110020333", "0001120330110200333", "0001120330112000333", "0110330112110002333", "0110330112110003233", "0110330112110003323", "0110330112110003332", "0110330112110020333", "0110330112110200333", "0110330112112000333"},
            {"44111001455"},
            {"1452228555", "1452282555", "1452822555", "1458222555"},
            {"00044112225588555211000", "00404112225588555211000", "00440112225588555211000", "04004112225588555211000", "04040112225588555211000", "04400112225588555211000", "40004112225588555211000", "40040112225588555211000", "40400112225588555211000", "44000112225588555211000", "00041112224555885211000", "00041112242555885211000", "00041112422555885211000", "00041114222555885211000", "00401112224555885211000", "00401112242555885211000", "00401112422555885211000", "00401114222555885211000", "04001112224555885211000", "04001112242555885211000", "04001112422555885211000", "04001114222555885211000", "40001112224555885211000", "40001112242555885211000", "40001112422555885211000", "40001114222555885211000"},
            {"454441145588854100088", "454441145588854100808", "454441145588854100880", "454441145588854108008", "454441145588854108080", "454441145588854108800", "454441145588854180008", "454441145588854180080", "454441145588854180800", "454441145588854188000", "454441145588854810008", "454441145588854810080", "454441145588854810800", "454441145588854818000", "454441145588854881000", "454441145588858410008", "454441145588858410080", "454441145588858410800", "454441145588858418000", "454441145588858481000", "454441145588858841000"},
            {"8887774410333011001"},
            {"43334744100014445558", "43334117441000145558", "43334171441000145558", "43334711441000145558"},
            {"122215554788874410011033301", "122251554788874410011033301", "122255154788874410011033301", "122255514788874410011033301"},
            {"10144411445543377", "10144411445543737", "10144411445543773", "10144411445547337", "10144411445547373", "10144411445547733", "10145544114443377", "10145544114443737", "10145544114443773", "10145544114447337", "10145544114447373", "10145544114447733", "10145547741144433"},
            // NOTE: not all solutions for the remaining challenges are listed.
            // Other solutions exist that are simple reorderings of the ones listed below.
            // JUNIOR
            {"2110022110301410022255588855211001", "2110022110301412225558885521100111"},
            {"011002112221115554441036333014455441033301"},
            {"63301103014100154441033663301114100055", "63301103014100154441033663301410002225"},
            {"01144104443467433300044410011488852225558"},
            {"444558854888776667677766677433300085444112111000"},
            {"2558877855577744452100054443445557776778887", "2558877855577744452100054774344554576855887"},
            {"855544588855547774666333474554100014585"},
            {"8774474852445554100111441108887888"},
            {"011002221555444103633301444744555854441033301"},
            {"5688778574333077411144557744110333"},
            {"011225521555444103633300011144474411152225522288"},
            {"4785225585888777444521001112224522578552252"},
            {"3001100300141014554344114578887767", "3001101345545547741134457888776777"},
            {"4330030004111222455544488877745241044433666"},
            {"0001100221125552221114441033633000144744412225585521114441022333", "0110011221125552221114441033633000144744412225585521114441022333", "0110022112225552221114441033633000144744412225585521114441022333"},
            // EXPERT
            {"038555445888555444777433443000330330006663411"},
            {"85411455445888555444117774410144433666334100"},
            {"10633006330110022211022336663"},
            {"477766633300366636330007441122125225547855222"},
            {"1001103011144544102366330030141222522", "1001103011144544102366333014111222522", "1033366330144544121103663330141222522", "1033366330145444102336633014100222522"},
            {"5888777441110014114774787441154441022333"},
            {"2544525410436333047455411145855228"},
            {"743000355477743666341114443335222566"},
            {"2356333445254143355474585411", "2356344525414334455474585411", "2356344525414334745558555411"},
            {"03323003367445554433304447778555887"},
            {"25544552554100043445632223300474335558", "25544552554110011104356322233474335558"},
    };
}
